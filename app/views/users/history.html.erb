<h1>History</h1>

<!-- search bar & buttons -->
<div>
  <%= label_tag "search", "Search:" %>
  <%= text_field_tag "search", nil, id: "search_bar" %>

  <label for="column_selector">Search Column:</label>
  <select id="column_selector">
    <option value="user_name">User Name</option>
    <option value="reward_activity_name">Reward/Activity Name</option>
  </select>
</div>

<!-- Filter preset values -->
<div>
  <label for="filter_selector">Filter by type:</label>
  <select id="filter_selector">
    <option value="">All</option>
    <option value="spent">Spent</option>
    <option value="earned">Earned</option>
  </select>
</div>

<table id="history_table">
    <tr>
        <th>Type</th>
        <th>User Name</th>
        <th>Reward/Activity Name</th>
        <th>Points</th>
        <th>Created At</th>
        <th>Updated At</th>
    </tr>
    <% @history.each do |h| %>
        <tr>
            <td><%= h[0] %> </td>
            <td><%= h[1] %> </td>
            <td><%= h[2] %> </td>
            <td><%= h[3] %> </td>
            <td><%= h[4] %> </td>
            <td><%= h[5] %> </td>
        </tr>
    <% end %>
</table>

<script>
// JavaScript for filtering members based on the search bar
const searchInput = document.getElementById("search_bar");
const columnSelector = document.getElementById("column_selector");
const filterSelector = document.getElementById("filter_selector");
const histTable = document.getElementById("history_table");

function filterTable() {
  const searchQuery = searchInput.value.trim().toLowerCase();
  const selectedColumn = columnSelector.value;
  const selectedFilter = filterSelector.value.toLowerCase(); // Get selected filter value
  const rows = histTable.querySelectorAll("tr");

  // Determine the cell index based on the selected column
  let cellIndex;
  switch (selectedColumn) {
    case "user_name":
      cellIndex = 1;
      break;
    case "reward_activity_name":
      cellIndex = 2;
      break;
    default:
      break;
  }

  // Start from the second row (index 1) to skip the header row
  for (let i = 1; i < rows.length; i++) {
    const row = rows[i];
    if (cellIndex !== undefined) {
      const rowData = row.cells[cellIndex].textContent.trim().toLowerCase();
      const isVisible = rowData.includes(searchQuery);
      row.style.display = isVisible ? "" : "none";
    }
  }
}

function filterTableByType() {
  const selectedFilter = filterSelector.value.toLowerCase(); // Retrieve selected filter value
  const rows = histTable.querySelectorAll("tr");

  // Start from the second row (index 1) to skip the header row
  for (let i = 1; i < rows.length; i++) {
    const row = rows[i];
    const rowType = row.cells[0].textContent.trim().toLowerCase();
    const searchQuery = searchInput.value.trim().toLowerCase();
    const searchVisible = row.cells[1].textContent.trim().toLowerCase().includes(searchQuery) ||
                          row.cells[2].textContent.trim().toLowerCase().includes(searchQuery); // Check if search query matches user name or reward/activity name

    // Check if row type matches filter value and search visibility
    const isVisible = (selectedFilter === "" || rowType === selectedFilter) && searchVisible;
    row.style.display = isVisible ? "" : "none";
  }
}

searchInput.addEventListener("input", filterTable);
columnSelector.addEventListener("change", filterTable);
filterSelector.addEventListener("change", filterTableByType);
</script>
